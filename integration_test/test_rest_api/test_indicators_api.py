from .util import get_indicators_collection, new_indicator_payload, \
    create_new_indicator, list_indicators, bulk_insert_indicators


class TestScenarios:
    def test_scenario_add_new_indicator_writes_to_db(self, session, cleanup_indicators_collection):
        indicators = get_indicators_collection(session)
        assert len(indicators) == 0
        payload = new_indicator_payload()
        create_new_indicator(session, payload=payload)
        indicators = get_indicators_collection(session)
        assert len(indicators) == 1
        indicator = indicators[0]
        assert indicator["splunk_field_name"] == "dest_ip"
        assert indicator["splunk_field_value"] == "1.2.3.4"
        assert indicator["indicator_id"].startswith("indicator--"), "Indicator ID should be autogenerated"
        assert indicator["grouping_id"] == payload["grouping_id"]
        assert indicator["created"] is not None
        assert indicator["modified"] is not None

    def test_list_indicators_no_filter(self, session, cleanup_indicators_collection):
        indicators_to_add = [new_indicator_payload() for _ in range(5)]
        for indicator in indicators_to_add:
            create_new_indicator(session, payload=indicator)
        assert len(get_indicators_collection(session)) == 5

        resp_no_filter = list_indicators(session, skip=0, limit=100, query={})
        indicators_no_filter = resp_no_filter["records"]
        assert len(indicators_no_filter) == 5
        assert resp_no_filter["total"] == 5

    def test_list_indicators_with_filter(self, session, cleanup_indicators_collection):
        indicators_to_add = [new_indicator_payload() for _ in range(5)]
        for indicator in indicators_to_add:
            create_new_indicator(session, payload=indicator)
        assert len(get_indicators_collection(session)) == 5

        first_grouping_id = indicators_to_add[0]["grouping_id"]
        resp_with_filter = list_indicators(session, skip=0, limit=100, query={
            "grouping_id": first_grouping_id
        })
        indicators_with_filter = resp_with_filter["records"]
        assert len(indicators_with_filter) == 1
        assert resp_with_filter["total"] == 1

    def test_list_indicators_with_60000_records(self, session, cleanup_indicators_collection):
        # In limits.conf [kvstore]: max_rows_per_query = 50000
        # https://docs.splunk.com/Documentation/Splunk/9.3.0/Admin/Limitsconf#.5Bkvstore.5D
        # See if "total" is accurate for more than 50000 records
        indicators = [new_indicator_payload() for _ in range(60000)]
        bulk_insert_indicators(session, indicators=indicators)
        indicators_in_collection = get_indicators_collection(session)
        assert len(indicators_in_collection) == 60000

        resp = list_indicators(session=session, skip=0, limit=10)
        assert resp["total"] == 60000
        assert len(resp["records"]) == 10
