from TA_CTIS_TAXII.package.bin.models.identity import IdentityModelV1, identity_converter
import pytest


def test_unstructure_identity():
    identity = IdentityModelV1(name="Org ABC", identity_class="organization")
    as_dict = identity_converter.unstructure(identity)
    assert as_dict["name"] == "Org ABC"
    assert as_dict["identity_class"] == "organization"
    assert "identity_id" in as_dict, "identity_id should be autogenerated"


def test_structure_identity():
    as_dict = {
        "name": "Org ABC",
        "identity_class": "organization"
    }
    identity = identity_converter.structure(as_dict, IdentityModelV1)
    assert identity.name == "Org ABC"
    assert identity.identity_class == "organization"
    assert identity.identity_id.startswith("identity--"), "identity_id should be autogenerated"


def test_to_stix():
    identity = IdentityModelV1(name="Org ABC", identity_class="organization")
    stix_identity = identity.to_stix()
    assert stix_identity.id.startswith("identity--")
    assert stix_identity.name == "Org ABC"
    assert stix_identity.identity_class == "organization"


def test_validate_identity_id():
    with pytest.raises(ValueError) as exc_info:
        IdentityModelV1(identity_id="not valid id", name="name", identity_class="organization")
    assert "Invalid identity_id" in str(exc_info.value)
