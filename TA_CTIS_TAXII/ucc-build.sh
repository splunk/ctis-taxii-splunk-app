#!/usr/bin/env bash
set -xe

# Append custom conf to configuration generated by UCC
output_app_dir="output/TA_CTIS_TAXII"

# Set the UCC_BUILD_PRESERVE_LOCAL_DIR environment variable to preserve the output/local directory if testing locally
if [[ -n "${UCC_BUILD_PRESERVE_LOCAL_DIR}" ]]; then
  local_dir="$output_app_dir/local"
  temp_dir=$(mktemp -d)
  # Check if local_dir exists, if it does then preserve it by copying it to a temp directory
  if [ -d "$local_dir" ]; then
      echo "Temp directory to preserve local/: $temp_dir"
      rsync -a "$local_dir/" "$temp_dir"
  fi
else
  echo "UCC_BUILD_PRESERVE_LOCAL_DIR is not set, local/ will not be preserved"
fi

UCC_BUILD_FLAGS="--verbose"
if [[ -n "${TA_VERSION}" ]]; then
  UCC_BUILD_FLAGS+=" --ta-version=${TA_VERSION}"
fi
# Standard ucc build
ucc-gen build $UCC_BUILD_FLAGS

# Remove default/*.custom.conf files from output app's default directory
rm "$output_app_dir"/default/*.custom.conf

# Append package/default/restmap.custom.conf to output app's default/restmap.conf
for conf_file_name in "restmap" "web"; do
    output_file="$output_app_dir/default/$conf_file_name.conf"
    input_file="package/default/$conf_file_name.custom.conf"
    echo "Appending $input_file to $output_file"
    echo "" >> "$output_file"
    cat  "$input_file" >> "$output_file"
done

if [[ -n "${UCC_BUILD_PRESERVE_LOCAL_DIR}" ]]; then
  # Make local directory again
  mkdir -p "$local_dir"

  # Copy contents of temp_dir back to $local_dir
  echo "Copying preserved local/ back to output app"
  rsync -a "$temp_dir/" "$local_dir"
fi

